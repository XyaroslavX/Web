/**
 * Less - Leaner CSS v4.2.0
 * http://lesscss.org
 * 
 * Copyright (c) 2009-2023, Alexis Sellier <self@cloudhead.net>
 * Licensed under the Apache-2.0 License.
 *
 * @license Apache-2.0
 */
!function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).less = t()
}(this, (function() {
    "use strict";
    function e(e) {
        return e.replace(/^[a-z-]+:\/+?[^/]+/, "").replace(/[?&]livereload=\w+/, "").replace(/^\//, "").replace(/\.[a-zA-Z]+$/, "").replace(/[^.\w-]+/g, "-").replace(/\./g, ":")
    }
    function t(e, t) {
        if (t)
            for (var i in t.dataset)
                if (Object.prototype.hasOwnProperty.call(t.dataset, i))
                    if ("env" === i || "dumpLineNumbers" === i || "rootpath" === i || "errorReporting" === i)
                        e[i] = t.dataset[i];
                    else
                        try {
                            e[i] = JSON.parse(t.dataset[i])
                        } catch (e) {}
    }
    var i = function(t, i, n) {
        var r = n.href || ""
          , s = "less:" + (n.title || e(r))
          , o = t.getElementById(s)
          , a = !1
          , l = t.createElement("style");
        l.setAttribute("type", "text/css"),
        n.media && l.setAttribute("media", n.media),
        l.id = s,
        l.styleSheet || (l.appendChild(t.createTextNode(i)),
        a = null !== o && o.childNodes.length > 0 && l.childNodes.length > 0 && o.firstChild.nodeValue === l.firstChild.nodeValue);
        var u = t.getElementsByTagName("head")[0];
        if (null === o || !1 === a) {
            var c = n && n.nextSibling || null;
            c ? c.parentNode.insertBefore(l, c) : u.appendChild(l)
        }
        if (o && !1 === a && o.parentNode.removeChild(o),
        l.styleSheet)
            try {
                l.styleSheet.cssText = i
            } catch (e) {
                throw new Error("Couldn't reassign styleSheet.cssText.")
            }
    }
      , n = function(e) {
        var t, i = e.document;
        return i.currentScript || (t = i.getElementsByTagName("script"))[t.length - 1]
    }
      , r = {
        error: function(e) {
            this._fireEvent("error", e)
        },
        warn: function(e) {
            this._fireEvent("warn", e)
        },
        info: function(e) {
            this._fireEvent("info", e)
        },
        debug: function(e) {
            this._fireEvent("debug", e)
        },
        addListener: function(e) {
            this._listeners.push(e)
        },
        removeListener: function(e) {
            for (var t = 0; t < this._listeners.length; t++)
                if (this._listeners[t] === e)
                    return void this._listeners.splice(t, 1)
        },
        _fireEvent: function(e, t) {
            for (var i = 0; i < this._listeners.length; i++) {
                var n = this._listeners[i][e];
                n && n(t)
            }
        },
        _listeners: []
    }
      , s = function() {
        function e(e, t) {
            this.fileManagers = t || [],
            e = e || {};
            for (var i = [], n = i.concat(["encodeBase64", "mimeLookup", "charsetLookup", "getSourceMapGenerator"]), r = 0; r < n.length; r++) {
                var s = n[r]
                  , o = e[s];
                o ? this[s] = o.bind(e) : r < i.length && this.warn("missing required function in environment - " + s)
            }
        }
        return e.prototype.getFileManager = function(e, t, i, n, s) {
            e || r.warn("getFileManager called with no filename.. Please report this issue. continuing."),
            void 0 === t && r.warn("getFileManager called with null directory.. Please report this issue. continuing.");
            var o = this.fileManagers;
            i.pluginManager && (o = [].concat(o).concat(i.pluginManager.getFileManagers()));
            for (var a = o.length - 1; a >= 0; a--) {
                var l = o[a];
                if (l[s ? "supportsSync" : "supports"](e, t, i, n))
                    return l
            }
            return null
        }
        ,
        e.prototype.addFileManager = function(e) {
            this.fileManagers.push(e)
        }
        ,
        e.prototype.clearFileManagers = function() {
            this.fileManagers = []
        }
        ,
        e
    }()
      , o = {
        aliceblue: "#f0f8ff",
        antiquewhite: "#faebd7",
        aqua: "#00ffff",
        aquamarine: "#7fffd4",
        azure: "#f0ffff",
        beige: "#f5f5dc",
        bisque: "#ffe4c4",
        black: "#000000",
        blanchedalmond: "#ffebcd",
        blue: "#0000ff",
        blueviolet: "#8a2be2",
        brown: "#a52a2a",
        burlywood: "#deb887",
        cadetblue: "#5f9ea0",
        chartreuse: "#7fff00",
        chocolate: "#d2691e",
        coral: "#ff7f50",
        cornflowerblue: "#6495ed",
        cornsilk: "#fff8dc",
        crimson: "#dc143c",
        cyan: "#00ffff",
        darkblue: "#00008b",
        darkcyan: "#008b8b",
        darkgoldenrod: "#b8860b",
        darkgray: "#a9a9a9",
        darkgrey: "#a9a9a9",
        darkgreen: "#006400",
        darkkhaki: "#bdb76b",
        darkmagenta: "#8b008b",
        darkolivegreen: "#556b2f",
        darkorange: "#ff8c00",
        darkorchid: "#9932cc",
        darkred: "#8b0000",
        darksalmon: "#e9967a",
        darkseagreen: "#8fbc8f",
        darkslateblue: "#483d8b",
        darkslategray: "#2f4f4f",
        darkslategrey: "#2f4f4f",
        darkturquoise: "#00ced1",
        darkviolet: "#9400d3",
        deeppink: "#ff1493",
        deepskyblue: "#00bfff",
        dimgray: "#696969",
        dimgrey: "#696969",
        dodgerblue: "#1e90ff",
        firebrick: "#b22222",
        floralwhite: "#fffaf0",
        forestgreen: "#228b22",
        fuchsia: "#ff00ff",
        gainsboro: "#dcdcdc",
        ghostwhite: "#f8f8ff",
        gold: "#ffd700",
        goldenrod: "#daa520",
        gray: "#808080",
        grey: "#808080",
        green: "#008000",
        greenyellow: "#adff2f",
        honeydew: "#f0fff0",
        hotpink: "#ff69b4",
        indianred: "#cd5c5c",
        indigo: "#4b0082",
        ivory: "#fffff0",
        khaki: "#f0e68c",
        lavender: "#e6e6fa",
        lavenderblush: "#fff0f5",
        lawngreen: "#7cfc00",
        lemonchiffon: "#fffacd",
        lightblue: "#add8e6",
        lightcoral: "#f08080",
        lightcyan: "#e0ffff",
        lightgoldenrodyellow: "#fafad2",
        lightgray: "#d3d3d3",
        lightgrey: "#d3d3d3",
        lightgreen: "#90ee90",
        lightpink: "#ffb6c1",
        lightsalmon: "#ffa07a",
        lightseagreen: "#20b2aa",
        lightskyblue: "#87cefa",
        lightslategray: "#778899",
        lightslategrey: "#778899",
        lightsteelblue: "#b0c4de",
        lightyellow: "#ffffe0",
        lime: "#00ff00",
        limegreen: "#32cd32",
        linen: "#faf0e6",
        magenta: "#ff00ff",
        maroon: "#800000",
        mediumaquamarine: "#66cdaa",
        mediumblue: "#0000cd",
        mediumorchid: "#ba55d3",
        mediumpurple: "#9370d8",
        mediumseagreen: "#3cb371",
        mediumslateblue: "#7b68ee",
        mediumspringgreen: "#00fa9a",
        mediumturquoise: "#48d1cc",
        mediumvioletred: "#c71585",
        midnightblue: "#191970",
        mintcream: "#f5fffa",
        mistyrose: "#ffe4e1",
        moccasin: "#ffe4b5",
        navajowhite: "#ffdead",
        navy: "#000080",
        oldlace: "#fdf5e6",
        olive: "#808000",
        olivedrab: "#6b8e23",
        orange: "#ffa500",
        orangered: "#ff4500",
        orchid: "#da70d6",
        palegoldenrod: "#eee8aa",
        palegreen: "#98fb98",
        paleturquoise: "#afeeee",
        palevioletred: "#d87093",
        papayawhip: "#ffefd5",
        peachpuff: "#ffdab9",
        peru: "#cd853f",
        pink: "#ffc0cb",
        plum: "#dda0dd",
        powderblue: "#b0e0e6",
        purple: "#800080",
        rebeccapurple: "#663399",
        red: "#ff0000",
        rosybrown: "#bc8f8f",
        royalblue: "#4169e1",
        saddlebrown: "#8b4513",
        salmon: "#fa8072",
        sandybrown: "#f4a460",
        seagreen: "#2e8b57",
        seashell: "#fff5ee",
        sienna: "#a0522d",
        silver: "#c0c0c0",
        skyblue: "#87ceeb",
        slateblue: "#6a5acd",
        slategray: "#708090",
        slategrey: "#708090",
        snow: "#fffafa",
        springgreen: "#00ff7f",
        steelblue: "#4682b4",
        tan: "#d2b48c",
        teal: "#008080",
        thistle: "#d8bfd8",
        tomato: "#ff6347",
        turquoise: "#40e0d0",
        violet: "#ee82ee",
        wheat: "#f5deb3",
        white: "#ffffff",
        whitesmoke: "#f5f5f5",
        yellow: "#ffff00",
        yellowgreen: "#9acd32"
    }
      , a = {
        length: {
            m: 1,
            cm: .01,
            mm: .001,
            in: .0254,
            px: .0254 / 96,
            pt: .0254 / 72,
            pc: .0254 / 72 * 12
        },
        duration: {
            s: 1,
            ms: .001
        },
        angle: {
            rad: 1 / (2 * Math.PI),
            deg: 1 / 360,
            grad: 1 / 400,
            turn: 1
        }
    }
      , l = {
        colors: o,
        unitConversions: a
    }
      , u = function() {
        function e() {
            this.parent = null,
            this.visibilityBlocks = void 0,
            this.nodeVisible = void 0,
            this.rootNode = null,
            this.parsed = null
        }
        return Object.defineProperty(e.prototype, "currentFileInfo", {
            get: function() {
                return this.fileInfo()
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "index", {
            get: function() {
                return this.getIndex()
            },
            enumerable: !1,
            configurable: !0
        }),
        e.prototype.setParent = function(t, i) {
            function n(t) {
                t && t instanceof e && (t.parent = i)
            }
            Array.isArray(t) ? t.forEach(n) : n(t)
        }
        ,
        e.prototype.getIndex = function() {
            return this._index || this.parent && this.parent.getIndex() || 0
        }
        ,
        e.prototype.fileInfo = function() {
            return this._fileInfo || this.parent && this.parent.fileInfo() || {}
        }
        ,
        e.prototype.isRulesetLike = function() {
            return !1
        }
        ,
        e.prototype.toCSS = function(e) {
            var t = [];
            return this.genCSS(e, {
                add: function(e, i, n) {
                    t.push(e)
                },
                isEmpty: function() {
                    return 0 === t.length
                }
            }),
            t.join("")
        }
        ,
        e.prototype.genCSS = function(e, t) {
            t.add(this.value)
        }
        ,
        e.prototype.accept = function(e) {
            this.value = e.visit(this.value)
        }
        ,
        e.prototype.eval = function() {
            return this
        }
        ,
        e.prototype._operate = function(e, t, i, n) {
            switch (t) {
            case "+":
                return i + n;
            case "-":
                return i - n;
            case "*":
                return i * n;
            case "/":
                return i / n
            }
        }
        ,
        e.prototype.fround = function(e, t) {
            var i = e && e.numPrecision;
            return i ? Number((t + 2e-16).toFixed(i)) : t
        }
        ,
        e.compare = function(t, i) {
            if (t.compare && "Quoted" !== i.type && "Anonymous" !== i.type)
                return t.compare(i);
            if (i.compare)
                return -i.compare(t);
            if (t.type === i.type) {
                if (t = t.value,
                i = i.value,
                !Array.isArray(t))
                    return t === i ? 0 : void 0;
                if (t.length === i.length) {
                    for (var n = 0; n < t.length; n++)
                        if (0 !== e.compare(t[n], i[n]))
                            return;
                    return 0
                }
            }
        }
        ,
        e.numericCompare = function(e, t) {
            return e < t ? -1 : e === t ? 0 : e > t ? 1 : void 0
        }
        ,
        e.prototype.blocksVisibility = function() {
            return void 0 === this.visibilityBlocks && (this.visibilityBlocks = 0),
            0 !== this.visibilityBlocks
        }
        ,
        e.prototype.addVisibilityBlock = function() {
            void 0 === this.visibilityBlocks && (this.visibilityBlocks = 0),
            this.visibilityBlocks = this.visibilityBlocks + 1
        }
        ,
        e.prototype.removeVisibilityBlock = function() {
            void 0 === this.visibilityBlocks && (this.visibilityBlocks = 0),
            this.visibilityBlocks = this.visibilityBlocks - 1
        }
        ,
        e.prototype.ensureVisibility = function() {
            this.nodeVisible = !0
        }
        ,
        e.prototype.ensureInvisibility = function() {
            this.nodeVisible = !1
        }
        ,
        e.prototype.isVisible = function() {
            return this.nodeVisible
        }
        ,
        e.prototype.visibilityInfo = function() {
            return {
                visibilityBlocks: this.visibilityBlocks,
                nodeVisible: this.nodeVisible
            }
        }
        ,
        e.prototype.copyVisibilityInfo = function(e) {
            e && (this.visibilityBlocks = e.visibilityBlocks,
            this.nodeVisible = e.nodeVisible)
        }
        ,
        e
    }()
      , c = function(e, t, i) {
        var n = this;
        Array.isArray(e) ? this.rgb = e : e.length >= 6 ? (this.rgb = [],
        e.match(/.{2}/g).map((function(e, t) {
            t < 3 ? n.rgb.push(parseInt(e, 16)) : n.alpha = parseInt(e, 16) / 255
        }
        ))) : (this.rgb = [],
        e.split("").map((function(e, t) {
            t < 3 ? n.rgb.push(parseInt(e + e, 16)) : n.alpha = parseInt(e + e, 16) / 255
        }
        ))),
        this.alpha = this.alpha || ("number" == typeof t ? t : 1),
        void 0 !== i && (this.value = i)
    };
    function h(e, t) {
        return Math.min(Math.max(e, 0), t)
    }
    function f(e) {
        return "#" + e.map((function(e) {
            return ((e = h(Math.round(e), 255)) < 16 ? "0" : "") + e.toString(16)
        }
        )).join("")
    }
    c.prototype = Object.assign(new u, {
        type: "Color",
        luma: function() {
            var e = this.rgb[0] / 255
              , t = this.rgb[1] / 255
              , i = this.rgb[2] / 255;
            return .2126 * (e = e <= .03928 ? e / 12.92 : Math.pow((e + .055) / 1.055, 2.4)) + .7152 * (t = t <= .03928 ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4)) + .0722 * (i = i <= .03928 ? i / 12.92 : Math.pow((i + .055) / 1.055, 2.4))
        },
        genCSS: function(e, t) {
            t.add(this.toCSS(e))
        },
        toCSS: function(e, t) {
            var i, n, r, s = e && e.compress && !t, o = [];
            if (n = this.fround(e, this.alpha),
            this.value)
                if (0 === this.value.indexOf("rgb"))
                    n < 1 && (r = "rgba");
                else {
                    if (0 !== this.value.indexOf("hsl"))
                        return this.value;
                    r = n < 1 ? "hsla" : "hsl"
                }
            else
                n < 1 && (r = "rgba");
            switch (r) {
            case "rgba":
                o = this.rgb.map((function(e) {
                    return h(Math.round(e), 255)
                }
                )).concat(h(n, 1));
                break;
            case "hsla":
                o.push(h(n, 1));
            case "hsl":
                i = this.toHSL(),
                o = [this.fround(e, i.h), this.fround(e, 100 * i.s) + "%", this.fround(e, 100 * i.l) + "%"].concat(o)
            }
            if (r)
                return r + "(" + o.join("," + (s ? "" : " ")) + ")";
            if (i = this.toRGB(),
            s) {
                var a = i.split("");
                a[1] === a[2] && a[3] === a[4] && a[5] === a[6] && (i = "#" + a[1] + a[3] + a[5])
            }
            return i
        },
        operate: function(e, t, i) {
            for (var n = new Array(3), r = this.alpha * (1 - i.alpha) + i.alpha, s = 0; s < 3; s++)
                n[s] = this._operate(e, t, this.rgb[s], i.rgb[s]);
            return new c(n,r)
        },
        toRGB: function() {
            return f(this.rgb)
        },
        toHSL: function() {
            var e, t, i = this.rgb[0] / 255, n = this.rgb[1] / 255, r = this.rgb[2] / 255, s = this.alpha, o = Math.max(i, n, r), a = Math.min(i, n, r), l = (o + a) / 2, u = o - a;
            if (o === a)
                e = t = 0;
            else {
                switch (t = l > .5 ? u / (2 - o - a) : u / (o + a),
                o) {
                case i:
                    e = (n - r) / u + (n < r ? 6 : 0);
                    break;
                case n:
                    e = (r - i) / u + 2;
                    break;
                case r:
                    e = (i - n) / u + 4
                }
                e /= 6
            }
            return {
                h: 360 * e,
                s: t,
                l: l,
                a: s
            }
        },
        toHSV: function() {
            var e, t, i = this.rgb[0] / 255, n = this.rgb[1] / 255, r = this.rgb[2] / 255, s = this.alpha, o = Math.max(i, n, r), a = Math.min(i, n, r), l = o, u = o - a;
            if (t = 0 === o ? 0 : u / o,
            o === a)
                e = 0;
            else {
                switch (o) {
                case i:
                    e = (n - r) / u + (n < r ? 6 : 0);
                    break;
                case n:
                    e = (r - i) / u + 2;
                    break;
                case r:
                    e = (i - n) / u + 4
                }
                e /= 6
            }
            return {
                h: 360 * e,
                s: t,
                v: l,
                a: s
            }
        },
        toARGB: function() {
            return f([255 * this.alpha].concat(this.rgb))
        },
        compare: function(e) {
            return e.rgb && e.rgb[0] === this.rgb[0] && e.rgb[1] === this.rgb[1] && e.rgb[2] === this.rgb[2] && e.alpha === this.alpha ? 0 : void 0
        }
    }),
    c.fromKeyword = function(e) {
        var t, i = e.toLowerCase();
        if (o.hasOwnProperty(i) ? t = new c(o[i].slice(1)) : "transparent" === i && (t = new c([0, 0, 0],0)),
        t)
            return t.value = e,
            t
    }
    ;
    var p = function(e) {
        this.value = e
    };
    p.prototype = Object.assign(new u, {
        type: "Paren",
        genCSS: function(e, t) {
            t.add("("),
            this.value.genCSS(e, t),
            t.add(")")
        },
        eval: function(e) {
            return new p(this.value.eval(e))
        }
    });
    var v = {
        "": !0,
        " ": !0,
        "|": !0
    }
      , d = function(e) {
        " " === e ? (this.value = " ",
        this.emptyOrWhitespace = !0) : (this.value = e ? e.trim() : "",
        this.emptyOrWhitespace = "" === this.value)
    };
    d.prototype = Object.assign(new u, {
        type: "Combinator",
        genCSS: function(e, t) {
            var i = e.compress || v[this.value] ? "" : " ";
            t.add(i + this.value + i)
        }
    });
    var m = function(e, t, i, n, r, s) {
        this.combinator = e instanceof d ? e : new d(e),
        this.value = "string" == typeof t ? t.trim() : t || "",
        this.isVariable = i,
        this._index = n,
        this._fileInfo = r,
        this.copyVisibilityInfo(s),
        this.setParent(this.combinator, this)
    };
    m.prototype = Object.assign(new u, {
        type: "Element",
        accept: function(e) {
            var t = this.value;
            this.combinator = e.visit(this.combinator),
            "object" == typeof t && (this.value = e.visit(t))
        },
        eval: function(e) {
            return new m(this.combinator,this.value.eval ? this.value.eval(e) : this.value,this.isVariable,this.getIndex(),this.fileInfo(),this.visibilityInfo())
        },
        clone: function() {
            return new m(this.combinator,this.value,this.isVariable,this.getIndex(),this.fileInfo(),this.visibilityInfo())
        },
        genCSS: function(e, t) {
            t.add(this.toCSS(e), this.fileInfo(), this.getIndex())
        },
        toCSS: function(e) {
            e = e || {};
            var t = this.value
              , i = e.firstSelector;
            return t instanceof p && (e.firstSelector = !0),
            t = t.toCSS ? t.toCSS(e) : t,
            e.firstSelector = i,
            "" === t && "&" === this.combinator.value.charAt(0) ? "" : this.combinator.toCSS(e) + t
        }
    });
    var g = {
        ALWAYS: 0,
        PARENS_DIVISION: 1,
        PARENS: 2
    }
      , y = 0
      , b = 1
      , w = 2;
    function x(e) {
        return Object.prototype.toString.call(e).slice(8, -1)
    }
    function S(e) {
        return "Array" === x(e)
    }
    function I(e, t) {
        return void 0 === t && (t = {}),
        S(e) ? e.map((function(e) {
            return I(e, t)
        }
        )) : "Object" !== x(i = e) || i.constructor !== Object || Object.getPrototypeOf(i) !== Object.prototype ? e : function() {
            for (var e = 0, t = 0, i = arguments.length; t < i; t++)
                e += arguments[t].length;
            var n = Array(e)
              , r = 0;
            for (t = 0; t < i; t++)
                for (var s = arguments[t], o = 0, a = s.length; o < a; o++,
                r++)
                    n[r] = s[o];
            return n
        }(Object.getOwnPropertyNames(e), Object.getOwnPropertySymbols(e)).reduce((function(i, n) {
            return S(t.props) && !t.props.includes(n) || function(e, t, i, n, r) {
                var s = {}.propertyIsEnumerable.call(n, t) ? "enumerable" : "nonenumerable";
                "enumerable" === s && (e[t] = i),
                r && "nonenumerable" === s && Object.defineProperty(e, t, {
                    value: i,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                })
            }(i, n, I(e[n], t), e, t.nonenumerable),
            i
        }
        ), {});
        var i
    }
    function C(e, t) {
        for (var i = e + 1, n = null, r = -1; --i >= 0 && "\n" !== t.charAt(i); )
            r++;
        return "number" == typeof e && (n = (t.slice(0, e).match(/\n/g) || "").length),
        {
            line: n,
            column: r
        }
    }
    function k(e) {
        var t, i = e.length, n = new Array(i);
        for (t = 0; t < i; t++)
            n[t] = e[t];
        return n
    }
    function _(e) {
        var t = {};
        for (var i in e)
            Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
        return t
    }
    function A(e, t) {
        var i = t || {};
        if (!t._defaults) {
            i = {};
            var n = I(e);
            i._defaults = n;
            var r = t ? I(t) : {};
            Object.assign(i, n, r)
        }
        return i
    }
    function P(e, t) {
        if (t && t._defaults)
            return t;
        var i = A(e, t);
        if (i.strictMath && (i.math = g.PARENS),
        i.relativeUrls && (i.rewriteUrls = w),
        "string" == typeof i.math)
            switch (i.math.toLowerCase()) {
            case "always":
                i.math = g.ALWAYS;
                break;
            case "parens-division":
                i.math = g.PARENS_DIVISION;
                break;
            case "strict":
            case "parens":
                i.math = g.PARENS;
                break;
            default:
                i.math = g.PARENS
            }
        if ("string" == typeof i.rewriteUrls)
            switch (i.rewriteUrls.toLowerCase()) {
            case "off":
                i.rewriteUrls = y;
                break;
            case "local":
                i.rewriteUrls = b;
                break;
            case "all":
                i.rewriteUrls = w
            }
        return i
    }
    function M(e, t) {
        void 0 === t && (t = []);
        for (var i = 0, n = e.length; i < n; i++) {
            var r = e[i];
            Array.isArray(r) ? M(r, t) : void 0 !== r && t.push(r)
        }
        return t
    }
    function E(e) {
        return null == e
    }
    var R = Object.freeze({
        __proto__: null,
        getLocation: C,
        copyArray: k,
        clone: _,
        defaults: A,
        copyOptions: P,
        merge: function(e, t) {
            for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
            return e
        },
        flattenArray: M,
        isNullOrUndefined: E
    })
      , O = /(<anonymous>|Function):(\d+):(\d+)/
      , V = function(e, t, i) {
        Error.call(this);
        var n = e.filename || i;
        if (this.message = e.message,
        this.stack = e.stack,
        t && n) {
            var r = t.contents[n]
              , s = C(e.index, r)
              , o = s.line
              , a = s.column
              , l = e.call && C(e.call, r).line
              , u = r ? r.split("\n") : "";
            if (this.type = e.type || "Syntax",
            this.filename = n,
            this.index = e.index,
            this.line = "number" == typeof o ? o + 1 : null,
            this.column = a,
            !this.line && this.stack) {
                var c = this.stack.match(O)
                  , h = new Function("a","throw new Error()")
                  , f = 0;
                try {
                    h()
                } catch (e) {
                    var p = e.stack.match(O);
                    f = 1 - parseInt(p[2])
                }
                c && (c[2] && (this.line = parseInt(c[2]) + f),
                c[3] && (this.column = parseInt(c[3])))
            }
            this.callLine = l + 1,
            this.callExtract = u[l],
            this.extract = [u[this.line - 2], u[this.line - 1], u[this.line]]
        }
    };
    if (void 0 === Object.create) {
        var F = function() {};
        F.prototype = Error.prototype,
        V.prototype = new F
    } else
        V.prototype = Object.create(Error.prototype);
    V.prototype.constructor = V,
    V.prototype.toString = function(e) {
        e = e || {};
        var t = ""
          , i = this.extract || []
          , n = []
          , r = function(e) {
            return e
        };
        if (e.stylize) {
            var s = typeof e.stylize;
            if ("function" !== s)
                throw Error("options.stylize should be a function, got a " + s + "!");
            r = e.stylize
        }
        if (null !== this.line) {
            if ("string" == typeof i[0] && n.push(r(this.line - 1 + " " + i[0], "grey")),
            "string" == typeof i[1]) {
                var o = this.line + " ";
                i[1] && (o += i[1].slice(0, this.column) + r(r(r(i[1].substr(this.column, 1), "bold") + i[1].slice(this.column + 1), "red"), "inverse")),
                n.push(o)
            }
            "string" == typeof i[2] && n.push(r(this.line + 1 + " " + i[2], "grey")),
            n = n.join("\n") + r("", "reset") + "\n"
        }
        return t += r(this.type + "Error: " + this.message, "red"),
        this.filename && (t += r(" in ", "red") + this.filename),
        this.line && (t += r(" on line " + this.line + ", column " + (this.column + 1) + ":", "grey")),
        t += "\n" + n,
        this.callLine && (t += r("from ", "red") + (this.filename || "") + "/n",
        t += r(this.callLine, "grey") + " " + this.callExtract + "/n"),
        t
    }
    ;
    var $ = {
        visitDeeper: !0
    }
      , L = !1;
    function j(e) {
        return e
    }
    var N = function() {
        function e(e) {
            this._implementation = e,
            this._visitInCache = {},
            this._visitOutCache = {},
            L || (!function e(t, i) {
                var n, r;
                for (n in t)
                    switch (typeof (r = t[n])) {
                    case "function":
                        r.prototype && r.prototype.type && (r.prototype.typeIndex = i++);
                        break;
                    case "object":
                        i = e(r, i)
                    }
                return i
            }(He, 1),
            L = !0)
        }
        return e.prototype.visit = function(e) {
            if (!e)
                return e;
            var t = e.typeIndex;
            if (!t)
                return e.value && e.value.typeIndex && this.visit(e.value),
                e;
            var i, n = this._implementation, r = this._visitInCache[t], s = this._visitOutCache[t], o = $;
            if (o.visitDeeper = !0,
            r || (r = n[i = "visit" + e.type] || j,
            s = n[i + "Out"] || j,
            this._visitInCache[t] = r,
            this._visitOutCache[t] = s),
            r !== j) {
                var a = r.call(n, e, o);
                e && n.isReplacing && (e = a)
            }
            if (o.visitDeeper && e)
                if (e.length)
                    for (var l = 0, u = e.length; l < u; l++)
                        e[l].accept && e[l].accept(this);
                else
                    e.accept && e.accept(this);
            return s != j && s.call(n, e),
            e
        }
        ,
        e.prototype.visitArray = function(e, t) {
            if (!e)
                return e;
            var i, n = e.length;
            if (t || !this._implementation.isReplacing) {
                for (i = 0; i < n; i++)
                    this.visit(e[i]);
                return e
            }
            var r = [];
            for (i = 0; i < n; i++) {
                var s = this.visit(e[i]);
                void 0 !== s && (s.splice ? s.length && this.flatten(s, r) : r.push(s))
            }
            return r
        }
        ,
        e.prototype.flatten = function(e, t) {
            var i, n, r, s, o, a;
            for (t || (t = []),
            n = 0,
            i = e.length; n < i; n++)
                if (void 0 !== (r = e[n]))
                    if (r.splice)
                        for (o = 0,
                        s = r.length; o < s; o++)
                            void 0 !== (a = r[o]) && (a.splice ? a.length && this.flatten(a, t) : t.push(a));
                    else
                        t.push(r);
            return t
        }
        ,
        e
    }()
      , D = {}
      , B = function(e, t, i) {
        if (e)
            for (var n = 0; n < i.length; n++)
                Object.prototype.hasOwnProperty.call(e, i[n]) && (t[i[n]] = e[i[n]])
    }
      , U = ["paths", "rewriteUrls", "rootpath", "strictImports", "insecure", "dumpLineNumbers", "compress", "syncImport", "chunkInput", "mime", "useFileCache", "processImports", "pluginManager"];
    D.Parse = function(e) {
        B(e, this, U),
        "string" == typeof this.paths && (this.paths = [this.paths])
    }
    ;
    var q = ["paths", "compress", "math", "strictUnits", "sourceMap", "importMultiple", "urlArgs", "javascriptEnabled", "pluginManager", "importantScope", "rewriteUrls"];
    function T(e) {
        return !/^(?:[a-z-]+:|\/|#)/i.test(e)
    }
    function z(e) {
        return "." === e.charAt(0)
    }
    D.Eval = function(e, t) {
        B(e, this, q),
        "string" == typeof this.paths && (this.paths = [this.paths]),
        this.frames = t || [],
        this.importantScope = this.importantScope || []
    }
    ,
    D.Eval.prototype.enterCalc = function() {
        this.calcStack || (this.calcStack = []),
        this.calcStack.push(!0),
        this.inCalc = !0
    }
    ,
    D.Eval.prototype.exitCalc = function() {
        this.calcStack.pop(),
        this.calcStack.length || (this.inCalc = !1)
    }
    ,
    D.Eval.prototype.inParenthesis = function() {
        this.parensStack || (this.parensStack = []),
        this.parensStack.push(!0)
    }
    ,
    D.Eval.prototype.outOfParenthesis = function() {
        this.parensStack.pop()
    }
    ,
    D.Eval.prototype.inCalc = !1,
    D.Eval.prototype.mathOn = !0,
    D.Eval.prototype.isMathOn = function(e) {
        return !!this.mathOn && (!!("/" !== e || this.math === g.ALWAYS || this.parensStack && this.parensStack.length) && (!(this.math > g.PARENS_DIVISION) || this.parensStack && this.parensStack.length))
    }
    ,
    D.Eval.prototype.pathRequiresRewrite = function(e) {
        return (this.rewriteUrls === b ? z : T)(e)
    }
    ,
    D.Eval.prototype.rewritePath = function(e, t) {
        var i;
        return t = t || "",
        i = this.normalizePath(t + e),
        z(e) && T(t) && !1 === z(i) && (i = "./" + i),
        i
    }
    ,
    D.Eval.prototype.normalizePath = function(e) {
        var t, i = e.split("/").reverse();
        for (e = []; 0 !== i.length; )
            switch (t = i.pop()) {
            case ".":
                break;
            case "..":
                0 === e.length || ".." === e[e.length - 1] ? e.push(t) : e.pop();
                break;
            default:
                e.push(t)
            }
        return e.join("/")
    }
    ;
    var G = function() {
        function e(e) {
            this.imports = [],
            this.variableImports = [],
            this._onSequencerEmpty = e,
            this._currentDepth = 0
        }
        return e.prototype.addImport = function(e) {
            var t = this
              , i = {
                callback: e,
                args: null,
                isReady: !1
            };
            return this.imports.push(i),
            function() {
                i.args = Array.prototype.slice.call(arguments, 0),
                i.isReady = !0,
                t.tryRun()
            }
        }
));
//# sourceMappingURL=less.min.js.map
